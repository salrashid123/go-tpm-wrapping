// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.25.1
// source: tpmwrappb/wrap.proto

package tpmwrappb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret_KeyType int32

const (
	Secret_SEALED    Secret_KeyType = 0
	Secret_DUPLICATE Secret_KeyType = 1
)

// Enum value maps for Secret_KeyType.
var (
	Secret_KeyType_name = map[int32]string{
		0: "SEALED",
		1: "DUPLICATE",
	}
	Secret_KeyType_value = map[string]int32{
		"SEALED":    0,
		"DUPLICATE": 1,
	}
)

func (x Secret_KeyType) Enum() *Secret_KeyType {
	p := new(Secret_KeyType)
	*p = x
	return p
}

func (x Secret_KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_tpmwrappb_wrap_proto_enumTypes[0].Descriptor()
}

func (Secret_KeyType) Type() protoreflect.EnumType {
	return &file_tpmwrappb_wrap_proto_enumTypes[0]
}

func (x Secret_KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_KeyType.Descriptor instead.
func (Secret_KeyType) EnumDescriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{0, 0}
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type     Secret_KeyType `protobuf:"varint,2,opt,name=type,proto3,enum=tpmwrappb.Secret_KeyType" json:"type,omitempty"`
	UserAuth bool           `protobuf:"varint,3,opt,name=userAuth,proto3" json:"userAuth,omitempty"`
	Pcrs     []*PCRS        `protobuf:"bytes,4,rep,name=pcrs,proto3" json:"pcrs,omitempty"`
	// Types that are assignable to Key:
	//
	//	*Secret_SealedOp
	//	*Secret_DuplicatedOp
	Key isSecret_Key `protobuf_oneof:"Key"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpmwrappb_wrap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetType() Secret_KeyType {
	if x != nil {
		return x.Type
	}
	return Secret_SEALED
}

func (x *Secret) GetUserAuth() bool {
	if x != nil {
		return x.UserAuth
	}
	return false
}

func (x *Secret) GetPcrs() []*PCRS {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (m *Secret) GetKey() isSecret_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *Secret) GetSealedOp() *SealedKey {
	if x, ok := x.GetKey().(*Secret_SealedOp); ok {
		return x.SealedOp
	}
	return nil
}

func (x *Secret) GetDuplicatedOp() *DuplicatedKey {
	if x, ok := x.GetKey().(*Secret_DuplicatedOp); ok {
		return x.DuplicatedOp
	}
	return nil
}

type isSecret_Key interface {
	isSecret_Key()
}

type Secret_SealedOp struct {
	SealedOp *SealedKey `protobuf:"bytes,5,opt,name=sealed_op,json=sealedOp,proto3,oneof"`
}

type Secret_DuplicatedOp struct {
	DuplicatedOp *DuplicatedKey `protobuf:"bytes,6,opt,name=duplicated_op,json=duplicatedOp,proto3,oneof"`
}

func (*Secret_SealedOp) isSecret_Key() {}

func (*Secret_DuplicatedOp) isSecret_Key() {}

type PCRS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pcr   int32  `protobuf:"varint,1,opt,name=pcr,proto3" json:"pcr,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PCRS) Reset() {
	*x = PCRS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpmwrappb_wrap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCRS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCRS) ProtoMessage() {}

func (x *PCRS) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCRS.ProtoReflect.Descriptor instead.
func (*PCRS) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{1}
}

func (x *PCRS) GetPcr() int32 {
	if x != nil {
		return x.Pcr
	}
	return 0
}

func (x *PCRS) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SealedKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyfile []byte `protobuf:"bytes,1,opt,name=keyfile,proto3" json:"keyfile,omitempty"`
}

func (x *SealedKey) Reset() {
	*x = SealedKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpmwrappb_wrap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SealedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealedKey) ProtoMessage() {}

func (x *SealedKey) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealedKey.ProtoReflect.Descriptor instead.
func (*SealedKey) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{2}
}

func (x *SealedKey) GetKeyfile() []byte {
	if x != nil {
		return x.Keyfile
	}
	return nil
}

type DuplicatedKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kek     []byte `protobuf:"bytes,2,opt,name=kek,proto3" json:"kek,omitempty"`
	Iv      []byte `protobuf:"bytes,3,opt,name=iv,proto3" json:"iv,omitempty"`
	EkPub   []byte `protobuf:"bytes,4,opt,name=ekPub,proto3" json:"ekPub,omitempty"`
	DupPub  []byte `protobuf:"bytes,5,opt,name=dupPub,proto3" json:"dupPub,omitempty"`
	DupDup  []byte `protobuf:"bytes,6,opt,name=dupDup,proto3" json:"dupDup,omitempty"`
	DupSeed []byte `protobuf:"bytes,7,opt,name=dupSeed,proto3" json:"dupSeed,omitempty"`
}

func (x *DuplicatedKey) Reset() {
	*x = DuplicatedKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tpmwrappb_wrap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuplicatedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicatedKey) ProtoMessage() {}

func (x *DuplicatedKey) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicatedKey.ProtoReflect.Descriptor instead.
func (*DuplicatedKey) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{3}
}

func (x *DuplicatedKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DuplicatedKey) GetKek() []byte {
	if x != nil {
		return x.Kek
	}
	return nil
}

func (x *DuplicatedKey) GetIv() []byte {
	if x != nil {
		return x.Iv
	}
	return nil
}

func (x *DuplicatedKey) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

func (x *DuplicatedKey) GetDupPub() []byte {
	if x != nil {
		return x.DupPub
	}
	return nil
}

func (x *DuplicatedKey) GetDupDup() []byte {
	if x != nil {
		return x.DupDup
	}
	return nil
}

func (x *DuplicatedKey) GetDupSeed() []byte {
	if x != nil {
		return x.DupSeed
	}
	return nil
}

var File_tpmwrappb_wrap_proto protoreflect.FileDescriptor

var file_tpmwrappb_wrap_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x70, 0x6d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x62, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x70, 0x6d, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x62, 0x22, 0xaf, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x74, 0x70, 0x6d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x04, 0x70,
	0x63, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x70, 0x6d, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x62, 0x2e, 0x50, 0x43, 0x52, 0x53, 0x52, 0x04, 0x70, 0x63, 0x72, 0x73,
	0x12, 0x33, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x70, 0x6d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x61,
	0x6c, 0x65, 0x64, 0x4f, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74,
	0x70, 0x6d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x62, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x22, 0x24, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x22, 0x2e, 0x0a, 0x04, 0x50, 0x43, 0x52, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x63, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x63, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x44,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x75, 0x70, 0x50,
	0x75, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x75, 0x70, 0x50, 0x75, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x75, 0x70, 0x44, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x64, 0x75, 0x70, 0x44, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x70, 0x53,
	0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x75, 0x70, 0x53, 0x65,
	0x65, 0x64, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x61, 0x6c, 0x72, 0x61, 0x73, 0x68, 0x69, 0x64, 0x31, 0x32, 0x33, 0x2f, 0x67, 0x6f,
	0x2d, 0x74, 0x70, 0x6d, 0x2d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x70,
	0x6d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tpmwrappb_wrap_proto_rawDescOnce sync.Once
	file_tpmwrappb_wrap_proto_rawDescData = file_tpmwrappb_wrap_proto_rawDesc
)

func file_tpmwrappb_wrap_proto_rawDescGZIP() []byte {
	file_tpmwrappb_wrap_proto_rawDescOnce.Do(func() {
		file_tpmwrappb_wrap_proto_rawDescData = protoimpl.X.CompressGZIP(file_tpmwrappb_wrap_proto_rawDescData)
	})
	return file_tpmwrappb_wrap_proto_rawDescData
}

var file_tpmwrappb_wrap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tpmwrappb_wrap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tpmwrappb_wrap_proto_goTypes = []interface{}{
	(Secret_KeyType)(0),   // 0: tpmwrappb.Secret.KeyType
	(*Secret)(nil),        // 1: tpmwrappb.Secret
	(*PCRS)(nil),          // 2: tpmwrappb.PCRS
	(*SealedKey)(nil),     // 3: tpmwrappb.SealedKey
	(*DuplicatedKey)(nil), // 4: tpmwrappb.DuplicatedKey
}
var file_tpmwrappb_wrap_proto_depIdxs = []int32{
	0, // 0: tpmwrappb.Secret.type:type_name -> tpmwrappb.Secret.KeyType
	2, // 1: tpmwrappb.Secret.pcrs:type_name -> tpmwrappb.PCRS
	3, // 2: tpmwrappb.Secret.sealed_op:type_name -> tpmwrappb.SealedKey
	4, // 3: tpmwrappb.Secret.duplicated_op:type_name -> tpmwrappb.DuplicatedKey
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_tpmwrappb_wrap_proto_init() }
func file_tpmwrappb_wrap_proto_init() {
	if File_tpmwrappb_wrap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tpmwrappb_wrap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpmwrappb_wrap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCRS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpmwrappb_wrap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SealedKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tpmwrappb_wrap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuplicatedKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tpmwrappb_wrap_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Secret_SealedOp)(nil),
		(*Secret_DuplicatedOp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tpmwrappb_wrap_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tpmwrappb_wrap_proto_goTypes,
		DependencyIndexes: file_tpmwrappb_wrap_proto_depIdxs,
		EnumInfos:         file_tpmwrappb_wrap_proto_enumTypes,
		MessageInfos:      file_tpmwrappb_wrap_proto_msgTypes,
	}.Build()
	File_tpmwrappb_wrap_proto = out.File
	file_tpmwrappb_wrap_proto_rawDesc = nil
	file_tpmwrappb_wrap_proto_goTypes = nil
	file_tpmwrappb_wrap_proto_depIdxs = nil
}
