// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: tpmwrappb/wrap.proto

package tpmwrappb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret_KeyType int32

const (
	Secret_SEALED    Secret_KeyType = 0
	Secret_DUPLICATE Secret_KeyType = 1
)

// Enum value maps for Secret_KeyType.
var (
	Secret_KeyType_name = map[int32]string{
		0: "SEALED",
		1: "DUPLICATE",
	}
	Secret_KeyType_value = map[string]int32{
		"SEALED":    0,
		"DUPLICATE": 1,
	}
)

func (x Secret_KeyType) Enum() *Secret_KeyType {
	p := new(Secret_KeyType)
	*p = x
	return p
}

func (x Secret_KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_tpmwrappb_wrap_proto_enumTypes[0].Descriptor()
}

func (Secret_KeyType) Type() protoreflect.EnumType {
	return &file_tpmwrappb_wrap_proto_enumTypes[0]
}

func (x Secret_KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_KeyType.Descriptor instead.
func (Secret_KeyType) EnumDescriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{0, 0}
}

type DuplicatedKey_ParentKeyType int32

const (
	DuplicatedKey_EndorsementECC DuplicatedKey_ParentKeyType = 0
	DuplicatedKey_EndorsementRSA DuplicatedKey_ParentKeyType = 1
	DuplicatedKey_H2             DuplicatedKey_ParentKeyType = 2
)

// Enum value maps for DuplicatedKey_ParentKeyType.
var (
	DuplicatedKey_ParentKeyType_name = map[int32]string{
		0: "EndorsementECC",
		1: "EndorsementRSA",
		2: "H2",
	}
	DuplicatedKey_ParentKeyType_value = map[string]int32{
		"EndorsementECC": 0,
		"EndorsementRSA": 1,
		"H2":             2,
	}
)

func (x DuplicatedKey_ParentKeyType) Enum() *DuplicatedKey_ParentKeyType {
	p := new(DuplicatedKey_ParentKeyType)
	*p = x
	return p
}

func (x DuplicatedKey_ParentKeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DuplicatedKey_ParentKeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_tpmwrappb_wrap_proto_enumTypes[1].Descriptor()
}

func (DuplicatedKey_ParentKeyType) Type() protoreflect.EnumType {
	return &file_tpmwrappb_wrap_proto_enumTypes[1]
}

func (x DuplicatedKey_ParentKeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DuplicatedKey_ParentKeyType.Descriptor instead.
func (DuplicatedKey_ParentKeyType) EnumDescriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{3, 0}
}

type Secret struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version  int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type     Secret_KeyType         `protobuf:"varint,3,opt,name=type,proto3,enum=tpmwrappb.Secret_KeyType" json:"type,omitempty"`
	UserAuth bool                   `protobuf:"varint,4,opt,name=userAuth,proto3" json:"userAuth,omitempty"`
	Pcrs     []*PCRS                `protobuf:"bytes,5,rep,name=pcrs,proto3" json:"pcrs,omitempty"`
	// Types that are valid to be assigned to Key:
	//
	//	*Secret_SealedOp
	//	*Secret_DuplicatedOp
	Key           isSecret_Key `protobuf_oneof:"Key"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_tpmwrappb_wrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Secret) GetType() Secret_KeyType {
	if x != nil {
		return x.Type
	}
	return Secret_SEALED
}

func (x *Secret) GetUserAuth() bool {
	if x != nil {
		return x.UserAuth
	}
	return false
}

func (x *Secret) GetPcrs() []*PCRS {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (x *Secret) GetKey() isSecret_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Secret) GetSealedOp() *SealedKey {
	if x != nil {
		if x, ok := x.Key.(*Secret_SealedOp); ok {
			return x.SealedOp
		}
	}
	return nil
}

func (x *Secret) GetDuplicatedOp() *DuplicatedKey {
	if x != nil {
		if x, ok := x.Key.(*Secret_DuplicatedOp); ok {
			return x.DuplicatedOp
		}
	}
	return nil
}

type isSecret_Key interface {
	isSecret_Key()
}

type Secret_SealedOp struct {
	SealedOp *SealedKey `protobuf:"bytes,6,opt,name=sealed_op,json=sealedOp,proto3,oneof"`
}

type Secret_DuplicatedOp struct {
	DuplicatedOp *DuplicatedKey `protobuf:"bytes,7,opt,name=duplicated_op,json=duplicatedOp,proto3,oneof"`
}

func (*Secret_SealedOp) isSecret_Key() {}

func (*Secret_DuplicatedOp) isSecret_Key() {}

type PCRS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pcr           int32                  `protobuf:"varint,1,opt,name=pcr,proto3" json:"pcr,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PCRS) Reset() {
	*x = PCRS{}
	mi := &file_tpmwrappb_wrap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PCRS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCRS) ProtoMessage() {}

func (x *PCRS) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCRS.ProtoReflect.Descriptor instead.
func (*PCRS) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{1}
}

func (x *PCRS) GetPcr() int32 {
	if x != nil {
		return x.Pcr
	}
	return 0
}

func (x *PCRS) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SealedKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyfile       string                 `protobuf:"bytes,1,opt,name=keyfile,proto3" json:"keyfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SealedKey) Reset() {
	*x = SealedKey{}
	mi := &file_tpmwrappb_wrap_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SealedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealedKey) ProtoMessage() {}

func (x *SealedKey) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealedKey.ProtoReflect.Descriptor instead.
func (*SealedKey) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{2}
}

func (x *SealedKey) GetKeyfile() string {
	if x != nil {
		return x.Keyfile
	}
	return ""
}

type DuplicatedKey struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Name          string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pcrs          []*PCRS                     `protobuf:"bytes,2,rep,name=pcrs,proto3" json:"pcrs,omitempty"`
	Keyfile       string                      `protobuf:"bytes,3,opt,name=keyfile,proto3" json:"keyfile,omitempty"`
	ParentName    string                      `protobuf:"bytes,4,opt,name=parentName,proto3" json:"parentName,omitempty"`
	Ekpub         []byte                      `protobuf:"bytes,5,opt,name=ekpub,proto3" json:"ekpub,omitempty"`
	ParentKeyType DuplicatedKey_ParentKeyType `protobuf:"varint,6,opt,name=parentKeyType,proto3,enum=tpmwrappb.DuplicatedKey_ParentKeyType" json:"parentKeyType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuplicatedKey) Reset() {
	*x = DuplicatedKey{}
	mi := &file_tpmwrappb_wrap_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuplicatedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicatedKey) ProtoMessage() {}

func (x *DuplicatedKey) ProtoReflect() protoreflect.Message {
	mi := &file_tpmwrappb_wrap_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicatedKey.ProtoReflect.Descriptor instead.
func (*DuplicatedKey) Descriptor() ([]byte, []int) {
	return file_tpmwrappb_wrap_proto_rawDescGZIP(), []int{3}
}

func (x *DuplicatedKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DuplicatedKey) GetPcrs() []*PCRS {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (x *DuplicatedKey) GetKeyfile() string {
	if x != nil {
		return x.Keyfile
	}
	return ""
}

func (x *DuplicatedKey) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *DuplicatedKey) GetEkpub() []byte {
	if x != nil {
		return x.Ekpub
	}
	return nil
}

func (x *DuplicatedKey) GetParentKeyType() DuplicatedKey_ParentKeyType {
	if x != nil {
		return x.ParentKeyType
	}
	return DuplicatedKey_EndorsementECC
}

var File_tpmwrappb_wrap_proto protoreflect.FileDescriptor

const file_tpmwrappb_wrap_proto_rawDesc = "" +
	"\n" +
	"\x14tpmwrappb/wrap.proto\x12\ttpmwrappb\"\xc9\x02\n" +
	"\x06Secret\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12-\n" +
	"\x04type\x18\x03 \x01(\x0e2\x19.tpmwrappb.Secret.KeyTypeR\x04type\x12\x1a\n" +
	"\buserAuth\x18\x04 \x01(\bR\buserAuth\x12#\n" +
	"\x04pcrs\x18\x05 \x03(\v2\x0f.tpmwrappb.PCRSR\x04pcrs\x123\n" +
	"\tsealed_op\x18\x06 \x01(\v2\x14.tpmwrappb.SealedKeyH\x00R\bsealedOp\x12?\n" +
	"\rduplicated_op\x18\a \x01(\v2\x18.tpmwrappb.DuplicatedKeyH\x00R\fduplicatedOp\"$\n" +
	"\aKeyType\x12\n" +
	"\n" +
	"\x06SEALED\x10\x00\x12\r\n" +
	"\tDUPLICATE\x10\x01B\x05\n" +
	"\x03Key\".\n" +
	"\x04PCRS\x12\x10\n" +
	"\x03pcr\x18\x01 \x01(\x05R\x03pcr\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"%\n" +
	"\tSealedKey\x12\x18\n" +
	"\akeyfile\x18\x01 \x01(\tR\akeyfile\"\xa7\x02\n" +
	"\rDuplicatedKey\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\x04pcrs\x18\x02 \x03(\v2\x0f.tpmwrappb.PCRSR\x04pcrs\x12\x18\n" +
	"\akeyfile\x18\x03 \x01(\tR\akeyfile\x12\x1e\n" +
	"\n" +
	"parentName\x18\x04 \x01(\tR\n" +
	"parentName\x12\x14\n" +
	"\x05ekpub\x18\x05 \x01(\fR\x05ekpub\x12L\n" +
	"\rparentKeyType\x18\x06 \x01(\x0e2&.tpmwrappb.DuplicatedKey.ParentKeyTypeR\rparentKeyType\"?\n" +
	"\rParentKeyType\x12\x12\n" +
	"\x0eEndorsementECC\x10\x00\x12\x12\n" +
	"\x0eEndorsementRSA\x10\x01\x12\x06\n" +
	"\x02H2\x10\x02B3Z1github.com/salrashid123/go-tpm-wrapping/tpmwrappbb\x06proto3"

var (
	file_tpmwrappb_wrap_proto_rawDescOnce sync.Once
	file_tpmwrappb_wrap_proto_rawDescData []byte
)

func file_tpmwrappb_wrap_proto_rawDescGZIP() []byte {
	file_tpmwrappb_wrap_proto_rawDescOnce.Do(func() {
		file_tpmwrappb_wrap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tpmwrappb_wrap_proto_rawDesc), len(file_tpmwrappb_wrap_proto_rawDesc)))
	})
	return file_tpmwrappb_wrap_proto_rawDescData
}

var file_tpmwrappb_wrap_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tpmwrappb_wrap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tpmwrappb_wrap_proto_goTypes = []any{
	(Secret_KeyType)(0),              // 0: tpmwrappb.Secret.KeyType
	(DuplicatedKey_ParentKeyType)(0), // 1: tpmwrappb.DuplicatedKey.ParentKeyType
	(*Secret)(nil),                   // 2: tpmwrappb.Secret
	(*PCRS)(nil),                     // 3: tpmwrappb.PCRS
	(*SealedKey)(nil),                // 4: tpmwrappb.SealedKey
	(*DuplicatedKey)(nil),            // 5: tpmwrappb.DuplicatedKey
}
var file_tpmwrappb_wrap_proto_depIdxs = []int32{
	0, // 0: tpmwrappb.Secret.type:type_name -> tpmwrappb.Secret.KeyType
	3, // 1: tpmwrappb.Secret.pcrs:type_name -> tpmwrappb.PCRS
	4, // 2: tpmwrappb.Secret.sealed_op:type_name -> tpmwrappb.SealedKey
	5, // 3: tpmwrappb.Secret.duplicated_op:type_name -> tpmwrappb.DuplicatedKey
	3, // 4: tpmwrappb.DuplicatedKey.pcrs:type_name -> tpmwrappb.PCRS
	1, // 5: tpmwrappb.DuplicatedKey.parentKeyType:type_name -> tpmwrappb.DuplicatedKey.ParentKeyType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tpmwrappb_wrap_proto_init() }
func file_tpmwrappb_wrap_proto_init() {
	if File_tpmwrappb_wrap_proto != nil {
		return
	}
	file_tpmwrappb_wrap_proto_msgTypes[0].OneofWrappers = []any{
		(*Secret_SealedOp)(nil),
		(*Secret_DuplicatedOp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tpmwrappb_wrap_proto_rawDesc), len(file_tpmwrappb_wrap_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tpmwrappb_wrap_proto_goTypes,
		DependencyIndexes: file_tpmwrappb_wrap_proto_depIdxs,
		EnumInfos:         file_tpmwrappb_wrap_proto_enumTypes,
		MessageInfos:      file_tpmwrappb_wrap_proto_msgTypes,
	}.Build()
	File_tpmwrappb_wrap_proto = out.File
	file_tpmwrappb_wrap_proto_goTypes = nil
	file_tpmwrappb_wrap_proto_depIdxs = nil
}
